
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: PhitNest-API

#### GLOBALS ####
Globals:
  Function:
    Timeout: 5
    Environment:
      Variables:
        Region: us-east-1

#### Input Parameters ####
Parameters:
  Stage:
    Type: String
    Description: Parameter for getting the deployment stage
    Default: default

#### Conditions ####
Conditions:
  CreateSandboxResources: !Equals [!Ref Stage, sandbox]

Resources:

  #### API GATEWAY ####
  PhitNestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors: '''*'''
      Name: !Sub "PhitNest-${Stage}-API"
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn
            Identity:
              Header: Authorization
              ValidationExpression: Bearer.*
  
  #### COGNITO ####
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "PhitNest-${Stage}"
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      UsernameAttributes:
      - email
      - phone_number
      Schema:
      - AttributeDataType: String
        Name: email
        Required: true
      - AttributeDataType: String
        Name: family_name
        Required: true
      - AttributeDataType: String
        Name: given_name
        Required: true
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub "PhitNest-${Stage}"
      GenerateSecret: false

  #### LAMBDA FUNCTIONS ####

  #### GET /user ####
  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdas/user/get.getUser
      CodeUri: src/
      Runtime: nodejs16.x
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref PhitNestApi
            Auth:
              Authorizer: CognitoAuthorizer
            Path: /user
            Method: GET

  #### GET /gym/nearest ####
  GetNearestGymsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdas/gym/nearest/get.nearestGyms
      CodeUri: src/
      Runtime: nodejs16.x
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref PhitNestApi
            Path: /gym/nearest
            Method: GET