/// HTTP Status Code
const int kStatusContinue = 100; // RFC 7231; 6.2.1
const int kStatusSwitchingProtocols = 101; // RFC 7231; 6.2.2
const int kStatusProcessing = 102; // RFC 2518; 10.1
const int kStatusEarlyHints = 103; // RFC 8297
const int kStatusOK = 200; // RFC 7231; 6.3.1
const int kStatusCreated = 201; // RFC 7231; 6.3.2
const int kStatusAccepted = 202; // RFC 7231; 6.3.3
const int kStatusNonAuthoritativeInfo = 203; // RFC 7231; 6.3.4
const int kStatusNoContent = 204; // RFC 7231; 6.3.5
const int kStatusResetContent = 205; // RFC 7231; 6.3.6
const int kStatusPartialContent = 206; // RFC 7233; 4.1
const int kStatusMultiStatus = 207; // RFC 4918; 11.1
const int kStatusAlreadyReported = 208; // RFC 5842; 7.1
const int kStatusIMUsed = 226; // RFC 3229; 10.4.1
const int kStatusMultipleChoices = 300; // RFC 7231; 6.4.1
const int kStatusMovedPermanently = 301; // RFC 7231; 6.4.2
const int kStatusFound = 302; // RFC 7231; 6.4.3
const int kStatusSeeOther = 303; // RFC 7231; 6.4.4
const int kStatusNotModified = 304; // RFC 7232; 4.1
const int kStatusUseProxy = 305; // RFC 7231; 6.4.5
const int kStatusTemporaryRedirect = 307; // RFC 7231; 6.4.7
const int kStatusPermanentRedirect = 308; // RFC 7538; 3
const int kStatusBadRequest = 400; // RFC 7231; 6.5.1
const int kStatusUnauthorized = 401; // RFC 7235; 3.1
const int kStatusPaymentRequired = 402; // RFC 7231; 6.5.2
const int kStatusForbidden = 403; // RFC 7231; 6.5.3
const int kStatusNotFound = 404; // RFC 7231; 6.5.4
const int kStatusMethodNotAllowed = 405; // RFC 7231; 6.5.5
const int kStatusNotAcceptable = 406; // RFC 7231; 6.5.6
const int kStatusProxyAuthRequired = 407; // RFC 7235; 3.2
const int kStatusRequestTimeout = 408; // RFC 7231; 6.5.7
const int kStatusConflict = 409; // RFC 7231; 6.5.8
const int kStatusGone = 410; // RFC 7231; 6.5.9
const int kStatusLengthRequired = 411; // RFC 7231; 6.5.10
const int kStatusPreconditionFailed = 412; // RFC 7232; 4.2
const int kStatusRequestEntityTooLarge = 413; // RFC 7231; 6.5.11
const int kStatusRequestURITooLong = 414; // RFC 7231; 6.5.12
const int kStatusUnsupportedMediaType = 415; // RFC 7231; 6.5.13
const int kStatusRequestedRangeNotSatisfiable = 416; // RFC 7233; 4.4
const int kStatusExpectationFailed = 417; // RFC 7231; 6.5.14
const int kStatusTeapot = 418; // RFC 7168; 2.3.3
const int kStatusMisdirectedRequest = 421; // RFC 7540; 9.1.2
const int kStatusUnprocessableEntity = 422; // RFC 4918; 11.2
const int kStatusLocked = 423; // RFC 4918; 11.3
const int kStatusFailedDependency = 424; // RFC 4918; 11.4
const int kStatusTooEarly = 425; // RFC 8470; 5.2.
const int kStatusUpgradeRequired = 426; // RFC 7231; 6.5.15
const int kStatusPreconditionRequired = 428; // RFC 6585; 3
const int kStatusTooManyRequests = 429; // RFC 6585; 4
const int kStatusRequestHeaderFieldsTooLarge = 431; // RFC 6585; 5
const int kStatusUnavailableForLegalReasons = 451; // RFC 7725; 3
const int kStatusInternalServerError = 500; // RFC 7231; 6.6.1
const int kStatusNotImplemented = 501; // RFC 7231; 6.6.2
const int kStatusBadGateway = 502; // RFC 7231; 6.6.3
const int kStatusServiceUnavailable = 503; // RFC 7231; 6.6.4
const int kStatusGatewayTimeout = 504; // RFC 7231; 6.6.5
const int kStatusHTTPVersionNotSupported = 505; // RFC 7231; 6.6.6
const int kStatusVariantAlsoNegotiates = 506; // RFC 2295; 8.1
const int kStatusInsufficientStorage = 507; // RFC 4918; 11.5
const int kStatusLoopDetected = 508; // RFC 5842; 7.2
const int kStatusNotExtended = 510; // RFC 2774; 7
const int kStatusNetworkAuthenticationRequired = 511; // RFC 6585; 6
