# HTTPS server
upstream nodejs {
	server 127.0.0.1:80;
	keepalive 256;
}

server {
	listen 8080;

	if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
		set $year $1;
		set $month $2;
		set $day $3;
		set $hour $4;
	}
	access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
	access_log  /var/log/nginx/access.log  main;


	location / {
		set $redirect 0;
		if ($http_x_forwarded_proto != "https") {
			set $redirect 1;
		}
		if ($http_user_agent ~* "ELB-HealthChecker") {
			set $redirect 0;
		}
		if ($redirect = 1) {
			return 301 https://$host$request_uri;
		}

		proxy_pass  http://nodejs;
		proxy_set_header   Connection "";
		proxy_http_version 1.1;
		proxy_set_header        Host            $host;
		proxy_set_header        X-Real-IP       $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}

server {
    listen       443 ssl;
    server_name  localhost;
    
    # ssl                  on;
    ssl_certificate      /etc/pki/tls/certs/server.crt;
    ssl_certificate_key  /etc/pki/tls/certs/server.key;
    
    ssl_session_timeout  5m;
    
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;
    
    location / {
        proxy_pass  http://nodejs;
        proxy_set_header   Connection "";
        proxy_http_version 1.1;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto https;
    }

    location /socket.io {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy false;

        proxy_pass http://localhost:80;
        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}